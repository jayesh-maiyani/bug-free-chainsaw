"""
Django settings for fds_client project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from datetime import timedelta

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/



# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '^rg_oj-bnt72vz5!*h-lx6l96w#ekurxf75eodej8p&msg@75-'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# Application definition

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

CORS_ORIGIN_WHITELIST = ["http://localhost:3000", "https://stage.portal.fusiondatasecure.com","https://stage.api.fusiondatasecure.com", "https://6940-49-43-33-131.ngrok-free.app"]



# Application definition

INSTALLED_APPS = [
    'channels',
    'django_crontab',
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts.apps.AccountsConfig',
    'searchableselect',
    'ajax_select',
    'rest_framework',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
    'django_user_agents',
    'corsheaders',
    'drf_yasg',
    'subscription',
    'captcha',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    "accounts.middlewares.AccessMiddleWare",
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'accounts.middlewares.RequestMiddleware',
    'accounts.middlewares.SWAGGERIPRestrictorMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
]

CRONJOBS = [
    ('0 0 1 * *', 'accounts.cron.record_users_and_devices', '>> /home/jayesh/fds_client/fds_client/cron.log'),
    ('59 23 * * *', 'accounts.cron.send_mail_of_expiration', '>> /home/jayesh/fds_client/fds_client/mail_expiration.log'),
    ('0 * * * *', 'accounts.cron.pause_renewals', '>> /home/jayesh/fds_client/fds_client/failed_renewals.log'),
    ('59 23 * * *', 'accounts.cron.expire_subscriptions', '>> /home/jayesh/fds_client/fds_client/subscription.log'),
    ('59 23 * * *', 'accounts.cron.send_mail_of_renewal', '>> /home/jayesh/fds_client/fds_client/mail_renewal.log')
]

ROOT_URLCONF = 'fds_client.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'fds_client.wsgi.application'

ASGI_APPLICATION = 'fds_client.asgi.app'

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels.layers.InMemoryChannelLayer', # or Redis or other backend
    },
}

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'fds_device',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': 'localhost',
        'PORT': 5432,
    }
}


DATABASE_ROUTERS = ['accounts.dbrouter.CheckerRouter']
CITIES_LIGHT_TRANSLATION_LANGUAGES = ['en']


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTH_USER_MODEL = 'accounts.User'
# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/


if DEBUG:
  STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
  STATIC_ROOT = os.path.join(BASE_DIR, 'assets')

else:
    STATIC_ROOT = os.path.join(BASE_DIR, 'static/')



MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATIC_URL = os.path.join(BASE_DIR, 'static/')


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',

    ),

    'DEFAULT_PERMISSION_CLASSES': (
        # 'rest_framework.permissions.IsAuthenticated',
    ),
    'EXCEPTION_HANDLER': 'accounts.handlers.fusiontech_exception_handler',

    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
        'rest_framework_csv.renderers.CSVRenderer',
        # 'rest_framework.renderers.BrowsableAPIRenderer',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 100,
    'DEFAULT_METADATA_CLASS': None,
    'DEFAULT_THROTTLE_CLASSES': [
        # 'rest_framework.throttling.AnonRateThrottle',
        # 'rest_framework.throttling.UserRateThrottle'
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '5000/hour',
        # 'user': '10000/hour'
    }
}



LOGGING = {
    'disable_existing_loggers': False,
    'version': 1,
    'formatters': {
        'verbose': {
            'format': '%(asctime)s  - %(name)s - %(lineno)d - %(levelname)s - %(message)s'
        },
        'simple': {
            'format': '%(asctime)s  - %(name)s - %(lineno)d - %(levelname)s - %(message)s'
        },
        "coloredlogs": {
            "()": "coloredlogs.ColoredFormatter",
            "fmt": '%(asctime)s  - %(name)s - %(lineno)d - %(levelname)s - %(message)s'
        },
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'level': 'INFO',
            'formatter':'coloredlogs',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}



# smtp
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587

OTP_EMAIL = "no-reply@fusiondatasecure.com"
OTP_EMAIL_PASSWORD = "pjwrmnlfzznakebg"


SWAGGER_SETTINGS = {
    'USE_SESSION_AUTH': False,
    'SECURITY_DEFINITIONS': {

    'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        }
    },
    'OPERATIONS_SORTER':None,
    'DOC_EXPANSION':'none',
    'TAGS_SORTER':'alpha'

}

REDOC_SETTINGS = {
   'LAZY_RENDERING': True,

}

JAZZMIN_SETTINGS = {
    # title of the window
    "site_title": "Library Admin",

    # Title on the brand, and the login screen (19 chars max)
    "site_header": "FusionTech Admin",

    # square logo to use for your site, must be present in static files, used for favicon and brand on top left
    # "site_logo": "books/img/logo.png",

    # Welcome text on the login screen
    "welcome_sign": "Welcome to the library",

    # Copyright on the footer
    "copyright": "Acme Library Ltd",

    # The model admin to search from the search bar, search bar omitted if excluded
    "search_model": "auth.User",

    # Field name on user model that contains avatar image
    "user_avatar": None,

    ############
    # Top Menu #
    ############

    # Links to put along the top menu
    "topmenu_links": [

        # Url that gets reversed (Permissions can be added)
        {"name": "Home",  "url": "admin:index", "permissions": ["auth.view_user"]},

        # external url that opens in a new window (Permissions can be added)
        {"name": "Support", "url": "https://github.com/farridav/django-jazzmin/issues", "new_window": True},

        # model admin to link to (Permissions checked against model)
        {"model": "auth.User"},

        # App with dropdown menu to all its models pages (Permissions checked against models)
        {"app": "books"},
    ],

    #############
    # User Menu #
    #############

    # Additional links to include in the user menu on the top right ("app" url type is not allowed)
    "usermenu_links": [
        {"name": "Support", "url": "https://github.com/farridav/django-jazzmin/issues", "new_window": True},
        {"model": "auth.user"}
    ],

    #############
    # Side Menu #
    #############

    # Whether to display the side menu
    "show_sidebar": True,

    # Whether to aut expand the menu
    "navigation_expanded": True,

    # Hide these apps when generating side menu e.g (auth)
    "hide_apps": [],

    # Hide these models when generating side menu (e.g auth.user)
    "hide_models": [],

    # List of apps (and/or models) to base side menu ordering off of (does not need to contain all apps/models)
    "order_with_respect_to": ["auth", "books", "books.author", "books.book"],

    # Custom links to append to app groups, keyed on app name
    "custom_links": {
        "books": [{
            "name": "Make Messages",
            "url": "make_messages",
            "icon": "fas fa-comments",
            "permissions": ["books.view_book"]
        }]
    },

    # Custom icons for side menu apps/models See https://fontawesome.com/icons?d=gallery&m=free
    # for a list of icon classes
    "icons": {
        "auth": "fas fa-users-cog",
        "auth.user": "fas fa-user",
        "auth.Group": "fas fa-users",
    },
    # Icons that are used when one is not manually specified
    "default_icon_parents": "fas fa-chevron-circle-right",
    "default_icon_children": "fas fa-circle",

    #################
    # Related Modal #
    #################
    # Use modals instead of popups
    "related_modal_active": False,

    #############
    # UI Tweaks #
    #############
    # Relative paths to custom CSS/JS scripts (must be present in static files)
    "custom_css": None,
    "custom_js": None,
    # Whether to show the UI customizer on the sidebar
    "show_ui_builder": False,

    ###############
    # Change view #
    ###############
    # Render out the change view as a single form, or in tabs, current options are
    # - single
    # - horizontal_tabs (default)
    # - vertical_tabs
    # - collapsible
    # - carousel
    "changeform_format": "horizontal_tabs",
    # override change forms on a per modeladmin basis
    "changeform_format_overrides": {"auth.user": "collapsible", "auth.group": "vertical_tabs"},
    # Add a language dropdown into the admin
    "language_chooser": True,
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days = 7),
    'REFRESH_TOKEN_LIFETIME': timedelta(days = 365),
    'ROTATE_REFRESH_TOKENS': True,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': False,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': '127.0.0.1:11211',
    }
}

USER_AGENTS_CACHE = 'default'

ALLOWED_HOSTS = ["*"]

STRIPE_PUBLISHABLE_KEY = "pk_test_51Mu7KcSGKIJ871Gbx0TIlThESVwZMFG9vwRgfv2yc5cTyiazMYbs3EBOlNCYLRo7rwaSaW9JZYA3sNcGvVK5jas900t6aBWibm"
STRIPE_SECRET_KEY = "sk_test_51Mu7KcSGKIJ871GbMpfYFlFsvyaECIE9GVNIzkxlXEXzeJc3FO4SWmGRb9NvHOGF6L9IMPJMBPPeOMzuXJwRKSr2008IXvZHqC"
STRIPE_WEBHOOK_SECRET = "whsec_872a3ec2ce09463d4eeb3b548fc65fe1f5f476f401ae2d2bc5206ab34972a870"
STRIPE_PRODUCT_ID = "prod_O7EZpQztrWs5vH"
STRIPE_MONTHLY_PRICE_ID = "price_1NaYU0SGKIJ871GbV03zVQvk"
STRIPE_YEARLY_PRICE_ID = "price_1NaYV5SGKIJ871GbueHIWra2"


RECAPTCHA_PUBLIC_KEY = '6LdjH-ElAAAAAIllFt_4-vqNcGKpm5ihgEbW7fL0'
RECAPTCHA_PRIVATE_KEY = '6LdjH-ElAAAAAG5QajpqTf5RAJYrh8PGTypHUOCs'



# Celery configuration

CELERY_BROKER_URL = 'redis://localhost:8005/'
CELERY_RESULT_BACKEND = 'redis://localhost:8005/'


ONESIGNAL_APP_ID = 'bf02e1a1-7095-4f24-b2e5-e1a30d201025'
ONESIGNAL_AUTH_KEY = 'YjNkNWI3NTQtYzM5MS00YTBiLTg1N2ItMzcwNjc0OGJlNWI0'


AWS_ACCESS_KEY_ID = 'AKIAQKNETFHC7RFSFD2C'
AWS_SECRET_ACCESS_KEY = '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'
AWS_STORAGE_BUCKET_NAME = 'fds-s3'
AWS_S3_REGION_NAME = 'us-east-1'

DEFAULT_FILE_STORAGE = 'accounts.models.S3Storage'
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'


CORS_ALLOW_ALL_ORIGINS = True


CLIENT_FRONTEND_URL = "http://localhost:3000"